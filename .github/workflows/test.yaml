name: 'Run Tests'

on:
  pull_request:
  push:
    branches: [master]

permissions:
  actions: read
  contents: write
  pull-requests: write

jobs:
  tests:
    env:
      RUSTC_WRAPPER: 'sccache'
      CARGO_INCREMENTAL: '0'
    strategy:
      matrix:
        os: [ci-enterprise-medium]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Add Nix binaries to PATH
        run: |
          echo "/nix/var/nix/profiles/default/bin" >> "$GITHUB_PATH"

      - name: Restore Cargo build cache
        id: restore_cargo_build_cache
        uses: MasterworksIO/action-local-cache@2
        with:
          path: ./target
          key: tests-cargo-build-cache

      - name: Run tests
        run: nix run nixpkgs#devenv -- test

  coverage:
    strategy:
      matrix:
        os: [ci-enterprise-medium]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Add Nix binaries to PATH
        run: |
          echo "/nix/var/nix/profiles/default/bin" >> "$GITHUB_PATH"

      - name: Restore Cargo build cache
        id: restore_cargo_build_cache
        uses: MasterworksIO/action-local-cache@2
        with:
          path: ./target
          key: coverage-tests-cargo-build-cache

      - name: Run coverage tests
        run: nix run nixpkgs#devenv -- shell wasm-trampoline-coverage

      - name: Generate coverage report
        uses: clearlyip/code-coverage-report-action@v5
        id: code_coverage_report_action
        if: ${{ github.actor != 'dependabot[bot]'}}
        with:
          filename: 'coverage.cobertura.xml'
          artifact_download_workflow_names: '"Run Tests",cron'

      - name: Add coverage PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        if:
          steps.code_coverage_report_action.outputs.file != '' &&
          github.event_name == 'pull_request' && (success() || failure())
        with:
          recreate: true
          path: code-coverage-results.md
